#! bash
alias g=grep
alias c=cat
alias x=xargs
alias b='arc browse'
alias +x='chmod +x'

alias less='less -R'
alias json='python -m json.tool'

alias cc='pygmentize -f256 -g -O style=pastie'
function show() {
  set-title "${!#}"
  cc $@ | less -N
}
declare -f _pygmentize > /dev/null &&
  complete -o default -F _pygmentize cc show

alias scp='scp -C'

alias ..='cd ..'
alias cd..='cd ..'

alias root='cd `git root`'

alias br='git br'
alias st='git st'
function f() { git fetch -q $* && git br; }
alias fr='f && git rebase'
alias l='git l'

alias gg='git grep -In'
function gge() { git grep -n "$@" | grep -o '^[^:]\{1,\}:[0-9]*' | xargs e; }
function ggb() { git grep -n "$@" | grep -o '^[^:]\{1,\}:[0-9]*' | xargs arc browse --; }
alias gf='git ls-files'
alias gfc='git ls-files | xargs ls -d1 --color'
alias gfg='git ls-files | grep'
function gfge() { git ls-files | grep "$@" | xargs e; }
function gfgb() { git ls-files | grep "$@" | xargs arc browse --; }
function gfgc() { git ls-files | grep "$@" | xargs classname; }
function gfgs() { show $(git ls-files | grep "$@" | head -1); }
alias blame='tig blame'

if declare -f __git_complete >/dev/null
then
  __git_complete br _git_branch
  __git_complete f _git_fetch
  __git_complete gg _git_grep
fi

function highlight() {
  egrep --color "$*|"
}
alias h=highlight

function gen_passwd() {
  tr -dc _A-Za-z0-9 < /dev/urandom | head -c${1:-10} | xargs
}

function m() {
  set-title Making "$@"... // $(pwd) '\036'
  if [ -x ./make.sh ]
  then
    ./make.sh $@
    return
  fi
  if [ -e build.gradle ]
  then
    gradle $@
    return
  fi
  if [ -e Makefile ]
  then
    make $@
    return
  fi
  if [ -e package.json ]
  then
    yarn $@
    return
  fi

  make $@
}

if [ -f /usr/share/bash-completion/completions/make ]
then
  . /usr/share/bash-completion/completions/make
  complete -F _make m
fi

function set-title() {
  echo -ne "\e]2;$*\007"
}
alias blue="set-title Working... '\036'"
function google() {
  $BROWSER https://www.google.com/search?q=$(python3 -c "import urllib.parse; print(urllib.parse.quote('$*'))")
}
